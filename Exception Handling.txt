#Basic Exception Handling

try:
    # Code that might cause an exception
    x = 10 / 0
except ZeroDivisionError:
    # Handling the exception
    print("Cannot divide by zero!")
else:
    # Runs if no exception occurs
    print("Division successful!")
finally:
    # Runs no matter what
    print("This will always run.")

**********************************************
#Handling Multiple Exceptions

try:
    x = int(input("Enter a number: "))
    result = 10 / x
except ValueError:
    print("That's not a valid number!")
except ZeroDivisionError:
    print("Cannot divide by zero!")
except Exception as e:
    print(f"An unexpected error occurred: {e}")
else:
    print("Division successful!")
finally:
    print("Execution completed.")

***********************************************
# raising exception

def divide(a, b):
    if b == 0:
        raise ValueError("Cannot divide by zero!")
    return a / b

try:
    result = divide(10, 5)
    print(f"Division={result}")
except ValueError as e:
    print(f"Error: {e}")

**********************************************
# Custom Exception

class CustomError(Exception):
    pass

def test_func(val):
    if val < 0:
        raise CustomError("Negative value is not allowed.")
    return val

try:
    print(f"You passed : {test_func(-5)}")
except CustomError as e:
    print(f"Caught an error: {e}")

