import pandas as pd

# --- Creating a Pandas Series ---
print("\n--- Pandas Series ---")
series = pd.Series([10, 20, 30, 40, 50], index=['A', 'B', 'C', 'D', 'E'])
print(series)

*******************************************

# --- Creating a Pandas DataFrame ---
print("\n--- Pandas DataFrame ---")
data = {
    "ID": range(1, 6),
    "Name": ["Alice", "Bob", "Charlie", "David", "Eve"],
    "Age": [25, 30, 35, 40, 45],
    "Salary": [50000, 60000, 70000, 80000, 90000]
}
df = pd.DataFrame(data)
df = pd.DataFrame(data).set_index("ID")
print(df)

# --- Indexing DataFrame ---
print("\n--- Accessing DataFrame Columns ---")
print(df['Name'])
print(df[['Name', 'Age']])

print("\n--- Accessing DataFrame Rows ---")
print(df.loc[2])   # Label-based index
print(df.iloc[2])  # Integer-based index

********************************************

# --- Basic Operations on DataFrame ---
print("\n--- Basic Operations ---")
df["Bonus"] = df["Salary"] * 0.10  # Adding a new column
print(df)

df["Age"] = df["Age"] + 1  # Modifying column values
print(df)

# --- Filtering Data ---
print("\n--- Filtering DataFrame ---")
filtered_df = df[df["Age"] > 30]  # Employees older than 30
print(filtered_df)

**********************************

# --- Combining DataFrames ---
df1 = pd.DataFrame({"ID": [1, 2, 3], "Department": ["HR", "IT", "Finance"]})
df2 = pd.DataFrame({"ID": [4, 5, 6], "Department": ["Marketing", "IT", "HR"]})

print("\n--- Concatenating DataFrames ---")
df_combined = pd.concat([df1, df2])
print(df_combined)

# --- Merging DataFrames ---
df3 = pd.DataFrame({"ID": [1, 2, 3], "Salary": [50000, 60000, 70000]})
df4 = pd.DataFrame({"ID": [1, 2, 3], "Bonus": [5000, 6000, 7000]})

print("\n--- Merging DataFrames ---")
df_merged = pd.merge(df3, df4, on="ID")
print(df_merged)

# --- Removing Duplicates ---
df_duplicates = pd.DataFrame({"Name": ["Alice", "Bob", "Alice", "Charlie"], "Age": [25, 30, 25, 35]})
print("\n--- Removing Duplicates ---")
df_unique = df_duplicates.drop_duplicates()
print(df_unique)